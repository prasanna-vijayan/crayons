import{c as cloneNodeWithEvents}from"./index-62c726ed.js";function createToastStack(t){if(!Object.prototype.hasOwnProperty.call(window,"fwRemoveToast"))window.addEventListener("fwRemoveToast",removeChildToast);var e=document.querySelector(".fw-toast-stack.".concat(t.position));var o;if(e){o=e}else{o=document.createElement("div");o.className="fw-toast-stack ".concat(t.position);o.style.cssText="position: fixed;\n      z-index: 950;\n      top: 10px;\n      ".concat(getStylePosition(t.position),"\n      background-color: $color-milk;\n      max-width: 100%;\n      max-height: 100%;");document.body.appendChild(o)}return o}function createToastNotification(t,e,o){if(t===void 0){t={}}var n=getProps(t,o);var a;if(t.contentref){var i=document.querySelector(t.contentref);a=cloneNodeWithEvents(i,true,true);n.content=""}else{a=document.createElement("fw-toast-message")}Object.entries(n).map((function(t){var e=t[0],o=t[1];if(o)a.setAttribute(kebabCase(e),o)}));e.appendChild(a)}function preventDuplicates(t,e){var o=false;Array.from(t).forEach((function(t){var n,a;if(((n=t.attributes.getNamedItem("content"))===null||n===void 0?void 0:n.value)===e.content&&((a=t.attributes.getNamedItem("type"))===null||a===void 0?void 0:a.value)===e.type){o=true}}));return o}function getStylePosition(t){switch(t){case"top-left":return"left: 10px;";case"top-right":return"right: 10px;";case"top-center":return"left: calc(50% - 200px);"}}function removeChildToast(t){var e=t.target;document.querySelectorAll(".fw-toast-stack").forEach((function(t){if(t.contains(e)){t.removeChild(e)}}))}function getProps(t,e){if(t===void 0){t={}}var o,n,a,i,c,r;var s=Object.assign({},{timeout:(o=t.timeout)!==null&&o!==void 0?o:e.timeout,type:(n=t.type)!==null&&n!==void 0?n:e.type,content:(a=t.content)!==null&&a!==void 0?a:e.content,actionLinkText:(i=t.actionLinkText)!==null&&i!==void 0?i:e.actionLinkText,sticky:(c=t.sticky)!==null&&c!==void 0?c:e.sticky,pauseOnHover:(r=t.pauseOnHover)!==null&&r!==void 0?r:e.pauseOnHover,open:true});return s}function kebabCase(t){return t.replace(/([a-z])([A-Z])/g,"$1-$2").replace(/[\s_]+/g,"-").toLowerCase()}export{createToastNotification as a,createToastStack as c,preventDuplicates as p};